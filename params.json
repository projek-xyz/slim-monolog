{"name":"Monolog Integration for Slim Framework 3","tagline":"Slim Framework 3.x component helper built on top of the Monolog Logger","body":"[![Build Status](https://img.shields.io/travis/projek-xyz/slim-monolog/master.svg?style=flat-square)](https://travis-ci.org/projek-xyz/slim-monolog)\r\n[![LICENSE](https://img.shields.io/packagist/l/projek-xyz/slim-monolog.svg?style=flat-square)](https://packagist.org/packages/projek-xyz/slim-monolog)\r\n[![VERSION](https://img.shields.io/packagist/v/projek-xyz/slim-monolog.svg?style=flat-square)](https://packagist.org/packages/projek-xyz/slim-monolog)\r\n[![Coveralls](https://img.shields.io/coveralls/projek-xyz/slim-monolog/master.svg?style=flat-square)](https://coveralls.io/github/projek-xyz/slim-monolog)\r\n[![SensioLabs Insight](https://img.shields.io/sensiolabs/i/26316c51-2637-473f-81bb-17af361f4b65.svg?style=flat-square)](https://insight.sensiolabs.com/projects/26316c51-2637-473f-81bb-17af361f4b65)\r\n\r\nThis is a Slim Framework 3.x component helper built on top of the Monolog Logger.\r\n\r\n## Install\r\n\r\nVia [Composer](https://getcomposer.org/)\r\n\r\n```bash\r\n$ composer require projek-xyz/slim-monolog --prefer-dist\r\n```\r\n\r\nRequires Slim Framework 3 and PHP 5.5.0 or newer.\r\n\r\n## Usage\r\n\r\n```php\r\n// Create Slim app\r\n$app = new \\Slim\\App();\r\n\r\n// Fetch DI Container\r\n$container = $app->getContainer();\r\n\r\n// Register Monolog helper:\r\n// Option 1, using MonologProvider\r\n$container->register(new \\Projek\\Slim\\MonologProvider);\r\n\r\n// Option 2, using Closure\r\n$container['logger'] = function ($c) {\r\n    $settings = [\r\n        'directory' => 'path/to/logs',  // Path to log directory\r\n        'filename' => 'my-app.log',     // Log file name\r\n        'timezone' => 'Asia/Jakarta',   // Your timezone\r\n        'level' => 'DEBUG',             // Log level\r\n        'handlers' => [],               // List of Monolog Handler you wanna use\r\n    ];\r\n\r\n    return new \\Projek\\Slim\\Monolog($settings);\r\n};\r\n\r\n// Define a log middleware\r\n$app->add(function ($req, $res, $next) {\r\n    $return = $next($req, $res);\r\n\r\n    // or you can use $this->get('logger')->info('...');\r\n    $this['logger']->info('Something happen');\r\n\r\n    return $return;\r\n});\r\n\r\n// Run app\r\n$app->run();\r\n```\r\n\r\n**NOTE**:\r\n- if you are using _option 1_ please make sure you already have `$container['settings']['logger']` in your configuration file.\r\n- `$settings['filename']` only required if you have `$settings['directory']`\r\n\r\n## Testing\r\n\r\n```bash\r\nphpunit\r\n```\r\n\r\n## Contributing\r\n\r\nPlease see [CONTRIBUTING](https://github.com/projek-xyz/slim-monolog/blob/master/CONTRIBUTING.md) for details.\r\n\r\n## Credits\r\n\r\n- [Fery Wardiyanto](http://feryardiant.me)\r\n- [Slim Framework](http://www.slimframework.com)\r\n- [Monolog](https://github.com/Seldaek/monolog)\r\n\r\n## License\r\n\r\nThe MIT License (MIT). Please see [License File](https://github.com/projek-xyz/slim-monolog/blob/master/LICENSE.md) for more information.","google":"UA-66920413-1","note":"Don't delete this file! It's used internally to help with page regeneration."}